// Generated by Copilot
import React, { useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { loginWithEmail } from "../services/firebaseService";

/**
 * ログインページコンポーネント
 */
const LoginPage = () => {
  // フォーム状態管理
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  // ナビゲーション
  const navigate = useNavigate();

  // フォーム送信処理
  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError("");

    try {
      // 入力検証
      if (!email || !password) {
        throw new Error("メールアドレスとパスワードを入力してください");
      }

      // ログイン処理
      const result = await loginWithEmail(email, password);

      if (result.success) {
        // ログイン成功時、書籍一覧ページへ遷移
        navigate("/");
      } else {
        // エラー表示
        setError(result.message);
      }
    } catch (error) {
      setError(error.message || "ログイン中にエラーが発生しました");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="auth-container">
      <h2 className="page-title">ログイン</h2>

      {error && <div className="error-message">{error}</div>}

      <form onSubmit={handleSubmit} className="auth-form">
        <div className="form-group">
          <label htmlFor="email">メールアドレス</label>
          <input
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            placeholder="メールアドレスを入力"
            disabled={loading}
            required
          />
        </div>

        <div className="form-group">
          <label htmlFor="password">パスワード</label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            placeholder="パスワードを入力"
            disabled={loading}
            required
          />
        </div>

        <button
          type="submit"
          className="btn btn-primary btn-block"
          disabled={loading}
        >
          {loading ? "ログイン中..." : "ログイン"}
        </button>
      </form>

      <div className="auth-links">
        <p>
          アカウントをお持ちでない方は、
          <Link to="/register">新規登録</Link>
          してください。
        </p>
      </div>
    </div>
  );
};

export default LoginPage;
