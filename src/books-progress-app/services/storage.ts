import {
  ref,
  uploadBytes,
  getDownloadURL,
  deleteObject,
} from "firebase/storage";
import { storage } from "./firebase";
import { getCurrentUser } from "./auth";

/**
 * Firebaseストレージサービス - 書籍カバー画像などの保存
 *
 * Generated by Copilot
 */

// 画像アップロード
export const uploadImage = async (uri: string, path: string) => {
  try {
    const user = getCurrentUser();
    if (!user) {
      throw new Error("ユーザーがログインしていません");
    }

    // 画像のBase64データをBlobに変換
    const response = await fetch(uri);
    const blob = await response.blob();

    // ストレージのリファレンスを作成
    const imageRef = ref(storage, path);

    // アップロード
    await uploadBytes(imageRef, blob);

    // アップロードした画像のURLを取得
    const url = await getDownloadURL(imageRef);

    return { url, error: null };
  } catch (error: any) {
    return {
      url: null,
      error: {
        code: error.code || "unknown",
        message: error.message || "画像のアップロードに失敗しました",
      },
    };
  }
};

// 書籍カバー画像のアップロード
export const uploadBookCover = async (uri: string, bookId: string) => {
  const user = getCurrentUser();
  if (!user) {
    return {
      url: null,
      error: {
        code: "not-authenticated",
        message: "ユーザーがログインしていません",
      },
    };
  }

  const path = `books/${user.uid}/${bookId}/cover.jpg`;
  return await uploadImage(uri, path);
};

// 画像削除
export const deleteImage = async (path: string) => {
  try {
    const user = getCurrentUser();
    if (!user) {
      throw new Error("ユーザーがログインしていません");
    }

    // ストレージのリファレンスを作成
    const imageRef = ref(storage, path);

    // 削除
    await deleteObject(imageRef);

    return { success: true, error: null };
  } catch (error: any) {
    return {
      success: false,
      error: {
        code: error.code || "unknown",
        message: error.message || "画像の削除に失敗しました",
      },
    };
  }
};

// 書籍カバー画像の削除
export const deleteBookCover = async (bookId: string) => {
  const user = getCurrentUser();
  if (!user) {
    return {
      success: false,
      error: {
        code: "not-authenticated",
        message: "ユーザーがログインしていません",
      },
    };
  }

  const path = `books/${user.uid}/${bookId}/cover.jpg`;
  return await deleteImage(path);
};
