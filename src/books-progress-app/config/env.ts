/**
 * 環境変数の読み込みと管理を行うモジュール
 *
 * Generated by Copilot
 */
import * as dotenv from "dotenv";
import { Platform } from "react-native";

// dotenvの設定（開発環境のみ）
if (__DEV__) {
  dotenv.config();
}

// 環境変数の型定義
interface Env {
  FIREBASE_API_KEY: string;
  FIREBASE_AUTH_DOMAIN: string;
  FIREBASE_PROJECT_ID: string;
  FIREBASE_STORAGE_BUCKET: string;
  FIREBASE_MESSAGING_SENDER_ID: string;
  FIREBASE_APP_ID: string;
  FIREBASE_MEASUREMENT_ID: string;
}

// 環境変数が設定されているか確認し、未設定の場合は警告を表示する関数
const checkEnvVariables = (env: Env): void => {
  if (__DEV__) {
    const missingVars = Object.entries(env)
      .filter(([_, value]) => !value)
      .map(([key]) => key);

    if (missingVars.length > 0) {
      console.warn(
        `警告: 以下の環境変数が設定されていません：${missingVars.join(
          ", "
        )}\n.envファイルを作成し、必要な環境変数を設定してください。`
      );
    }
  }
};

// 環境変数を取得する関数
// Expoでの環境変数の扱いは、プラットフォームによって異なるためこのようにラップします
export const getEnvVariables = (): Env => {
  // .envファイルから環境変数を取得し、未定義の場合は空の値を使用
  // セキュリティ上の理由から、APIキーなどの機密情報はハードコードしないでください
  return {
    FIREBASE_API_KEY: process.env.FIREBASE_API_KEY || "",
    FIREBASE_AUTH_DOMAIN: process.env.FIREBASE_AUTH_DOMAIN || "",
    FIREBASE_PROJECT_ID: process.env.FIREBASE_PROJECT_ID || "",
    FIREBASE_STORAGE_BUCKET: process.env.FIREBASE_STORAGE_BUCKET || "",
    FIREBASE_MESSAGING_SENDER_ID:
      process.env.FIREBASE_MESSAGING_SENDER_ID || "",
    FIREBASE_APP_ID: process.env.FIREBASE_APP_ID || "",
    FIREBASE_MEASUREMENT_ID: process.env.FIREBASE_MEASUREMENT_ID || "",
  };
};

// 環境変数を取得し、開発環境の場合は警告チェックを実行する関数
export const getValidatedEnvVariables = (): Env => {
  const env = getEnvVariables();
  checkEnvVariables(env);
  return env;
};
