// Generated by Copilot
import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { getReadingStats } from "../services/bookService";

const HomePage = () => {
  // 初期状態
  const [stats, setStats] = useState({
    totalBooks: 0,
    completedBooks: 0,
    inProgressBooks: 0,
    totalPages: 0,
    readPages: 0,
  });

  // コンポーネントがマウントされたときに統計情報を読み込む
  useEffect(() => {
    const loadStats = () => {
      const result = getReadingStats();
      if (result.success) {
        setStats(result.stats);
      } else {
        console.error("統計データの読み込みエラー:", result.message);
      }
    };

    loadStats();
  }, []);

  // 進捗率の計算
  const completionRate =
    stats.totalBooks > 0
      ? Math.round((stats.completedBooks / stats.totalBooks) * 100)
      : 0;

  // 読書進捗率の計算
  const pageProgressRate =
    stats.totalPages > 0
      ? Math.round((stats.readPages / stats.totalPages) * 100)
      : 0;

  return (
    <div>
      <h2 className="page-title">読書進捗管理アプリ</h2>
      <p className="page-subtitle">あなたの読書状況を簡単に管理できます</p>

      <div className="stats-container">
        <div className="stats-card">
          <h3>読書の統計</h3>
          <div className="stats-grid">
            <div className="stat-item">
              <p className="stat-value">{stats.totalBooks}</p>
              <p className="stat-label">合計書籍数</p>
            </div>
            <div className="stat-item">
              <p className="stat-value">{stats.completedBooks}</p>
              <p className="stat-label">完読数</p>
            </div>
            <div className="stat-item">
              <p className="stat-value">{stats.inProgressBooks}</p>
              <p className="stat-label">読書中</p>
            </div>
            <div className="stat-item">
              <p className="stat-value">{completionRate}%</p>
              <p className="stat-label">完読率</p>
            </div>
          </div>
        </div>

        <div className="stats-card">
          <h3>ページ進捗</h3>
          <p>
            {stats.readPages} / {stats.totalPages} ページ ({pageProgressRate}%)
          </p>
          <div className="progress-bar">
            <div
              className="progress-fill"
              style={{ width: `${pageProgressRate}%` }}
            ></div>
          </div>
        </div>

        <div className="quick-actions">
          <Link to="/add" className="btn">
            新しい書籍を追加
          </Link>
          <Link to="/books" className="btn btn-secondary">
            書籍リストを見る
          </Link>
        </div>
      </div>
    </div>
  );
};

export default HomePage;
